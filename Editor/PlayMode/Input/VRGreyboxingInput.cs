//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Packages/com.bcatstudio.vrgreyboxing/Editor/PlayMode/Input/VRGreyboxingInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace VRGreyboxing
{
    public partial class @VRGreyboxingInput: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @VRGreyboxingInput()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""VRGreyboxingInput"",
    ""maps"": [
        {
            ""name"": ""VRGreyboxing"",
            ""id"": ""5b3d0e5a-5818-4eb4-8454-b504649cb341"",
            ""actions"": [
                {
                    ""name"": ""GrabMoveLeft"",
                    ""type"": ""Button"",
                    ""id"": ""1cc8f695-5e1f-40ef-b8b5-3261a9b1caba"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeadTrackingState"",
                    ""type"": ""Value"",
                    ""id"": ""5e3cb18a-14c1-4d39-898a-74255f9ce243"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HeadRotation"",
                    ""type"": ""Value"",
                    ""id"": ""e38a4fec-1f56-450a-b37f-6182ad3c5cd6"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HeadPosition"",
                    ""type"": ""Value"",
                    ""id"": ""7b41239e-0cbd-437e-ad89-ee601f70aefc"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GrabMoveRight"",
                    ""type"": ""Button"",
                    ""id"": ""0b599d70-cdc7-4f48-a341-20ddac675781"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GrabRight"",
                    ""type"": ""Button"",
                    ""id"": ""a89c9a9a-58c0-4dde-93c1-c4b0631064fa"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GrabLeft"",
                    ""type"": ""Button"",
                    ""id"": ""03ce266e-d499-47d2-8970-5537cde25171"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TriggerRight"",
                    ""type"": ""Button"",
                    ""id"": ""a4b71d4f-af86-420f-b3ff-40599d3ea49a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TriggerLeft"",
                    ""type"": ""Button"",
                    ""id"": ""48f9901c-01b5-471d-b214-5449eb924e4f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AXLeft"",
                    ""type"": ""Button"",
                    ""id"": ""ffdb93ec-6e40-4ded-98d9-cc984beff553"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AXRight"",
                    ""type"": ""Button"",
                    ""id"": ""e6c70ba1-ac4a-4ea3-97ca-b3c89133cd84"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BYLeft"",
                    ""type"": ""Button"",
                    ""id"": ""5a0f30f9-b4b3-4c81-a5d1-fe4d17d5a27b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BYRight"",
                    ""type"": ""Button"",
                    ""id"": ""85d18296-0e23-4a51-a672-d78d2ed088b1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StickPressLeft"",
                    ""type"": ""Button"",
                    ""id"": ""3d416046-2a3f-4083-9c05-acc97ec5bc32"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StickPressRight"",
                    ""type"": ""Button"",
                    ""id"": ""c0150ba0-42f1-4457-9d1a-a9a48cde5338"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StickLeft"",
                    ""type"": ""Value"",
                    ""id"": ""2822d2f1-1540-412c-8a7f-99cf8a55714a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""StickRight"",
                    ""type"": ""Value"",
                    ""id"": ""68fcf92b-b034-44be-932d-8da0e2146d3c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""47f1e435-8c7e-48ea-a66c-3084236483cd"",
                    ""path"": ""<XRController>{RightHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrabRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5e55123-4ffb-4403-913c-ae9cb5b01750"",
                    ""path"": ""<XRController>{LeftHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrabLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""211a422f-5780-4e1d-8e4c-10341a1c5ff8"",
                    ""path"": ""<XRController>{RightHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""162674d6-6716-4588-a7c5-4f871d662425"",
                    ""path"": ""<XRController>{LeftHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""cad26f9b-d12e-4ff6-a52a-47805356a2ee"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrabMoveLeft"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""55f68ce4-d465-4cc5-9e70-c36fed251f2b"",
                    ""path"": ""<XRController>{LeftHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrabMoveLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""8357931e-9657-4ece-9392-46f70a015934"",
                    ""path"": ""<XRController>{LeftHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrabMoveLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0a9f1342-4b60-4008-ae6a-eecd9b45912c"",
                    ""path"": ""<XRHMD>/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeadTrackingState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d26fc10f-bde1-4c32-a9f1-2aa27dd5b63b"",
                    ""path"": ""<XRHMD>/centerEyeRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeadRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84206872-8692-4ef9-9876-d17c8ba76663"",
                    ""path"": ""<HandheldARInputDevice>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeadRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e1071df-5f9a-4f87-b2ab-0b12a9694930"",
                    ""path"": ""<XRHMD>/centerEyePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeadPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""022a8680-a33d-49ce-b32c-b76ba80b5d79"",
                    ""path"": ""<HandheldARInputDevice>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeadPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""f5a4f935-7a53-47b1-a1f8-51328e1a269c"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrabMoveRight"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""94d44f62-20c2-4217-bd7a-a73b8ff1167a"",
                    ""path"": ""<XRController>{RightHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrabMoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""0f77b8a4-071b-4d26-a562-1b98bbeef1fa"",
                    ""path"": ""<XRController>{RightHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrabMoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a175d8c3-75fb-49f6-a3cc-5f1880743847"",
                    ""path"": ""<XRController>{LeftHand}/{PrimaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AXLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba16cc83-fcf9-48c2-80d7-641d7b65f7ca"",
                    ""path"": ""<XRController>{RightHand}/{PrimaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AXRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44574a55-aea3-491e-a31f-a4a57d222671"",
                    ""path"": ""<XRController>{LeftHand}/{SecondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BYLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ed0a92f-8205-440b-935e-fa31c4267cbd"",
                    ""path"": ""<XRController>{RightHand}/{SecondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BYRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04b9d93e-0e84-4138-b781-965d98d2ec14"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxisClick}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickPressLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""263b7d20-1929-4e01-a6eb-91647e33906a"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxisClick}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickPressRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b60499c6-6e6c-4f43-9296-a32ce629693a"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d57884cf-8a80-48f6-ad3f-1ea40e81ed62"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // VRGreyboxing
            m_VRGreyboxing = asset.FindActionMap("VRGreyboxing", throwIfNotFound: true);
            m_VRGreyboxing_GrabMoveLeft = m_VRGreyboxing.FindAction("GrabMoveLeft", throwIfNotFound: true);
            m_VRGreyboxing_HeadTrackingState = m_VRGreyboxing.FindAction("HeadTrackingState", throwIfNotFound: true);
            m_VRGreyboxing_HeadRotation = m_VRGreyboxing.FindAction("HeadRotation", throwIfNotFound: true);
            m_VRGreyboxing_HeadPosition = m_VRGreyboxing.FindAction("HeadPosition", throwIfNotFound: true);
            m_VRGreyboxing_GrabMoveRight = m_VRGreyboxing.FindAction("GrabMoveRight", throwIfNotFound: true);
            m_VRGreyboxing_GrabRight = m_VRGreyboxing.FindAction("GrabRight", throwIfNotFound: true);
            m_VRGreyboxing_GrabLeft = m_VRGreyboxing.FindAction("GrabLeft", throwIfNotFound: true);
            m_VRGreyboxing_TriggerRight = m_VRGreyboxing.FindAction("TriggerRight", throwIfNotFound: true);
            m_VRGreyboxing_TriggerLeft = m_VRGreyboxing.FindAction("TriggerLeft", throwIfNotFound: true);
            m_VRGreyboxing_AXLeft = m_VRGreyboxing.FindAction("AXLeft", throwIfNotFound: true);
            m_VRGreyboxing_AXRight = m_VRGreyboxing.FindAction("AXRight", throwIfNotFound: true);
            m_VRGreyboxing_BYLeft = m_VRGreyboxing.FindAction("BYLeft", throwIfNotFound: true);
            m_VRGreyboxing_BYRight = m_VRGreyboxing.FindAction("BYRight", throwIfNotFound: true);
            m_VRGreyboxing_StickPressLeft = m_VRGreyboxing.FindAction("StickPressLeft", throwIfNotFound: true);
            m_VRGreyboxing_StickPressRight = m_VRGreyboxing.FindAction("StickPressRight", throwIfNotFound: true);
            m_VRGreyboxing_StickLeft = m_VRGreyboxing.FindAction("StickLeft", throwIfNotFound: true);
            m_VRGreyboxing_StickRight = m_VRGreyboxing.FindAction("StickRight", throwIfNotFound: true);
        }

        ~@VRGreyboxingInput()
        {
            UnityEngine.Debug.Assert(!m_VRGreyboxing.enabled, "This will cause a leak and performance issues, VRGreyboxingInput.VRGreyboxing.Disable() has not been called.");
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // VRGreyboxing
        private readonly InputActionMap m_VRGreyboxing;
        private List<IVRGreyboxingActions> m_VRGreyboxingActionsCallbackInterfaces = new List<IVRGreyboxingActions>();
        private readonly InputAction m_VRGreyboxing_GrabMoveLeft;
        private readonly InputAction m_VRGreyboxing_HeadTrackingState;
        private readonly InputAction m_VRGreyboxing_HeadRotation;
        private readonly InputAction m_VRGreyboxing_HeadPosition;
        private readonly InputAction m_VRGreyboxing_GrabMoveRight;
        private readonly InputAction m_VRGreyboxing_GrabRight;
        private readonly InputAction m_VRGreyboxing_GrabLeft;
        private readonly InputAction m_VRGreyboxing_TriggerRight;
        private readonly InputAction m_VRGreyboxing_TriggerLeft;
        private readonly InputAction m_VRGreyboxing_AXLeft;
        private readonly InputAction m_VRGreyboxing_AXRight;
        private readonly InputAction m_VRGreyboxing_BYLeft;
        private readonly InputAction m_VRGreyboxing_BYRight;
        private readonly InputAction m_VRGreyboxing_StickPressLeft;
        private readonly InputAction m_VRGreyboxing_StickPressRight;
        private readonly InputAction m_VRGreyboxing_StickLeft;
        private readonly InputAction m_VRGreyboxing_StickRight;
        public struct VRGreyboxingActions
        {
            private @VRGreyboxingInput m_Wrapper;
            public VRGreyboxingActions(@VRGreyboxingInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @GrabMoveLeft => m_Wrapper.m_VRGreyboxing_GrabMoveLeft;
            public InputAction @HeadTrackingState => m_Wrapper.m_VRGreyboxing_HeadTrackingState;
            public InputAction @HeadRotation => m_Wrapper.m_VRGreyboxing_HeadRotation;
            public InputAction @HeadPosition => m_Wrapper.m_VRGreyboxing_HeadPosition;
            public InputAction @GrabMoveRight => m_Wrapper.m_VRGreyboxing_GrabMoveRight;
            public InputAction @GrabRight => m_Wrapper.m_VRGreyboxing_GrabRight;
            public InputAction @GrabLeft => m_Wrapper.m_VRGreyboxing_GrabLeft;
            public InputAction @TriggerRight => m_Wrapper.m_VRGreyboxing_TriggerRight;
            public InputAction @TriggerLeft => m_Wrapper.m_VRGreyboxing_TriggerLeft;
            public InputAction @AXLeft => m_Wrapper.m_VRGreyboxing_AXLeft;
            public InputAction @AXRight => m_Wrapper.m_VRGreyboxing_AXRight;
            public InputAction @BYLeft => m_Wrapper.m_VRGreyboxing_BYLeft;
            public InputAction @BYRight => m_Wrapper.m_VRGreyboxing_BYRight;
            public InputAction @StickPressLeft => m_Wrapper.m_VRGreyboxing_StickPressLeft;
            public InputAction @StickPressRight => m_Wrapper.m_VRGreyboxing_StickPressRight;
            public InputAction @StickLeft => m_Wrapper.m_VRGreyboxing_StickLeft;
            public InputAction @StickRight => m_Wrapper.m_VRGreyboxing_StickRight;
            public InputActionMap Get() { return m_Wrapper.m_VRGreyboxing; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(VRGreyboxingActions set) { return set.Get(); }
            public void AddCallbacks(IVRGreyboxingActions instance)
            {
                if (instance == null || m_Wrapper.m_VRGreyboxingActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_VRGreyboxingActionsCallbackInterfaces.Add(instance);
                @GrabMoveLeft.started += instance.OnGrabMoveLeft;
                @GrabMoveLeft.performed += instance.OnGrabMoveLeft;
                @GrabMoveLeft.canceled += instance.OnGrabMoveLeft;
                @HeadTrackingState.started += instance.OnHeadTrackingState;
                @HeadTrackingState.performed += instance.OnHeadTrackingState;
                @HeadTrackingState.canceled += instance.OnHeadTrackingState;
                @HeadRotation.started += instance.OnHeadRotation;
                @HeadRotation.performed += instance.OnHeadRotation;
                @HeadRotation.canceled += instance.OnHeadRotation;
                @HeadPosition.started += instance.OnHeadPosition;
                @HeadPosition.performed += instance.OnHeadPosition;
                @HeadPosition.canceled += instance.OnHeadPosition;
                @GrabMoveRight.started += instance.OnGrabMoveRight;
                @GrabMoveRight.performed += instance.OnGrabMoveRight;
                @GrabMoveRight.canceled += instance.OnGrabMoveRight;
                @GrabRight.started += instance.OnGrabRight;
                @GrabRight.performed += instance.OnGrabRight;
                @GrabRight.canceled += instance.OnGrabRight;
                @GrabLeft.started += instance.OnGrabLeft;
                @GrabLeft.performed += instance.OnGrabLeft;
                @GrabLeft.canceled += instance.OnGrabLeft;
                @TriggerRight.started += instance.OnTriggerRight;
                @TriggerRight.performed += instance.OnTriggerRight;
                @TriggerRight.canceled += instance.OnTriggerRight;
                @TriggerLeft.started += instance.OnTriggerLeft;
                @TriggerLeft.performed += instance.OnTriggerLeft;
                @TriggerLeft.canceled += instance.OnTriggerLeft;
                @AXLeft.started += instance.OnAXLeft;
                @AXLeft.performed += instance.OnAXLeft;
                @AXLeft.canceled += instance.OnAXLeft;
                @AXRight.started += instance.OnAXRight;
                @AXRight.performed += instance.OnAXRight;
                @AXRight.canceled += instance.OnAXRight;
                @BYLeft.started += instance.OnBYLeft;
                @BYLeft.performed += instance.OnBYLeft;
                @BYLeft.canceled += instance.OnBYLeft;
                @BYRight.started += instance.OnBYRight;
                @BYRight.performed += instance.OnBYRight;
                @BYRight.canceled += instance.OnBYRight;
                @StickPressLeft.started += instance.OnStickPressLeft;
                @StickPressLeft.performed += instance.OnStickPressLeft;
                @StickPressLeft.canceled += instance.OnStickPressLeft;
                @StickPressRight.started += instance.OnStickPressRight;
                @StickPressRight.performed += instance.OnStickPressRight;
                @StickPressRight.canceled += instance.OnStickPressRight;
                @StickLeft.started += instance.OnStickLeft;
                @StickLeft.performed += instance.OnStickLeft;
                @StickLeft.canceled += instance.OnStickLeft;
                @StickRight.started += instance.OnStickRight;
                @StickRight.performed += instance.OnStickRight;
                @StickRight.canceled += instance.OnStickRight;
            }

            private void UnregisterCallbacks(IVRGreyboxingActions instance)
            {
                @GrabMoveLeft.started -= instance.OnGrabMoveLeft;
                @GrabMoveLeft.performed -= instance.OnGrabMoveLeft;
                @GrabMoveLeft.canceled -= instance.OnGrabMoveLeft;
                @HeadTrackingState.started -= instance.OnHeadTrackingState;
                @HeadTrackingState.performed -= instance.OnHeadTrackingState;
                @HeadTrackingState.canceled -= instance.OnHeadTrackingState;
                @HeadRotation.started -= instance.OnHeadRotation;
                @HeadRotation.performed -= instance.OnHeadRotation;
                @HeadRotation.canceled -= instance.OnHeadRotation;
                @HeadPosition.started -= instance.OnHeadPosition;
                @HeadPosition.performed -= instance.OnHeadPosition;
                @HeadPosition.canceled -= instance.OnHeadPosition;
                @GrabMoveRight.started -= instance.OnGrabMoveRight;
                @GrabMoveRight.performed -= instance.OnGrabMoveRight;
                @GrabMoveRight.canceled -= instance.OnGrabMoveRight;
                @GrabRight.started -= instance.OnGrabRight;
                @GrabRight.performed -= instance.OnGrabRight;
                @GrabRight.canceled -= instance.OnGrabRight;
                @GrabLeft.started -= instance.OnGrabLeft;
                @GrabLeft.performed -= instance.OnGrabLeft;
                @GrabLeft.canceled -= instance.OnGrabLeft;
                @TriggerRight.started -= instance.OnTriggerRight;
                @TriggerRight.performed -= instance.OnTriggerRight;
                @TriggerRight.canceled -= instance.OnTriggerRight;
                @TriggerLeft.started -= instance.OnTriggerLeft;
                @TriggerLeft.performed -= instance.OnTriggerLeft;
                @TriggerLeft.canceled -= instance.OnTriggerLeft;
                @AXLeft.started -= instance.OnAXLeft;
                @AXLeft.performed -= instance.OnAXLeft;
                @AXLeft.canceled -= instance.OnAXLeft;
                @AXRight.started -= instance.OnAXRight;
                @AXRight.performed -= instance.OnAXRight;
                @AXRight.canceled -= instance.OnAXRight;
                @BYLeft.started -= instance.OnBYLeft;
                @BYLeft.performed -= instance.OnBYLeft;
                @BYLeft.canceled -= instance.OnBYLeft;
                @BYRight.started -= instance.OnBYRight;
                @BYRight.performed -= instance.OnBYRight;
                @BYRight.canceled -= instance.OnBYRight;
                @StickPressLeft.started -= instance.OnStickPressLeft;
                @StickPressLeft.performed -= instance.OnStickPressLeft;
                @StickPressLeft.canceled -= instance.OnStickPressLeft;
                @StickPressRight.started -= instance.OnStickPressRight;
                @StickPressRight.performed -= instance.OnStickPressRight;
                @StickPressRight.canceled -= instance.OnStickPressRight;
                @StickLeft.started -= instance.OnStickLeft;
                @StickLeft.performed -= instance.OnStickLeft;
                @StickLeft.canceled -= instance.OnStickLeft;
                @StickRight.started -= instance.OnStickRight;
                @StickRight.performed -= instance.OnStickRight;
                @StickRight.canceled -= instance.OnStickRight;
            }

            public void RemoveCallbacks(IVRGreyboxingActions instance)
            {
                if (m_Wrapper.m_VRGreyboxingActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IVRGreyboxingActions instance)
            {
                foreach (var item in m_Wrapper.m_VRGreyboxingActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_VRGreyboxingActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public VRGreyboxingActions @VRGreyboxing => new VRGreyboxingActions(this);
        public interface IVRGreyboxingActions
        {
            void OnGrabMoveLeft(InputAction.CallbackContext context);
            void OnHeadTrackingState(InputAction.CallbackContext context);
            void OnHeadRotation(InputAction.CallbackContext context);
            void OnHeadPosition(InputAction.CallbackContext context);
            void OnGrabMoveRight(InputAction.CallbackContext context);
            void OnGrabRight(InputAction.CallbackContext context);
            void OnGrabLeft(InputAction.CallbackContext context);
            void OnTriggerRight(InputAction.CallbackContext context);
            void OnTriggerLeft(InputAction.CallbackContext context);
            void OnAXLeft(InputAction.CallbackContext context);
            void OnAXRight(InputAction.CallbackContext context);
            void OnBYLeft(InputAction.CallbackContext context);
            void OnBYRight(InputAction.CallbackContext context);
            void OnStickPressLeft(InputAction.CallbackContext context);
            void OnStickPressRight(InputAction.CallbackContext context);
            void OnStickLeft(InputAction.CallbackContext context);
            void OnStickRight(InputAction.CallbackContext context);
        }
    }
}
